swagger: "2.0"
info:
  description: >-
    Money accounting application. It tracks money flow of a single user.
  version: 1.0.0
  title: Accounting notebook
host: localhost:5000
basePath: /api/v1
tags:
  - name: transactions
    description: >-
      Transaction operations. There are 2 types of transaction: credit and
      debit. Credit transaction leads to the account balance growth. Debit
      transaction leads to the account balance reduction.
schemes:
  - http
paths:
  "/balance":
    get:
      summary: Fetches current account balance
      produces:
        - application/json
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            type: object
  "/transactions":
    get:
      tags:
        - transactions
      summary: Fetches transactions history
      produces:
        - application/json
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Transaction"
        400:
          description: invalid status value
    post:
      tags:
        - transactions
      summary: Commit new transaction to the account
      operationId: commitTransaction
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Transaction object
          required: true
          schema:
            $ref: "#/definitions/TransactionBody"
      responses:
        201:
          description: transaction stored
          schema:
            $ref: "#/definitions/Transaction"
        400:
          description: invalid input
  "/transactions/{transactionId}":
    get:
      tags:
        - transactions
      summary: Find transaction by ID
      description: Returns a single transaction object
      operationId: getTransactionById
      produces:
        - application/json
      parameters:
        - name: transactionId
          in: path
          description: ID of transaction to return
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: successful operation
          schema:
            $ref: "#/definitions/Transaction"
        401:
          description: invalid ID supplied
        404:
          description: transaction not found
definitions:
  TransactionBody:
    type: object
    required:
      - type
      - amount
    properties:
      type:
        type: string
        enum:
          - credit
          - debit
      amount:
        type: number
        minimum: 0
        description: >-
          Transaction numeric value. Incrementing or decrementing the account
          balance, based on the transaction type. Must be a positive value
  Transaction:
    type: object
    required:
      - type
      - amount
    properties:
      id:
        type: string
        format: uuid
        description: >-
          Unique transaction identifier, generated by the service, when the
          transaction is being stored.
      type:
        type: string
        enum:
          - credit
          - debit
      amount:
        type: number
        description: >-
          Transaction numeric value. Incrementing or decrementing the account
          balance, based on the transaction type.
      effectiveDate:
        type: string
        format: date-time
        description: >-
          Effective date-time, generated by the service, when the transaction is
          being stored.
